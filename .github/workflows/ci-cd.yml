name: MERN E-commerce CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FRONTEND_IMAGE: mern-ecommerce-frontend
  BACKEND_IMAGE: mern-ecommerce-backend

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test Application
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          frontend/package-lock.json
          backend/package-lock.json
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci --legacy-peer-deps --omit=dev
    
    - name: Install Backend Dependencies  
      working-directory: ./backend
      run: npm ci --omit=dev
    
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    name: Build and Push Docker Images
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Generate tags
      id: tags
      run: |
        echo "FRONTEND_TAG=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_IMAGE }}:latest" >> $GITHUB_OUTPUT
        echo "BACKEND_TAG=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BACKEND_IMAGE }}:latest" >> $GITHUB_OUTPUT
        echo "FRONTEND_SHA_TAG=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}" >> $GITHUB_OUTPUT  
        echo "BACKEND_SHA_TAG=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}" >> $GITHUB_OUTPUT
    
    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: |
          ${{ steps.tags.outputs.FRONTEND_TAG }}
          ${{ steps.tags.outputs.FRONTEND_SHA_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile  
        push: true
        tags: |
          ${{ steps.tags.outputs.BACKEND_TAG }}
          ${{ steps.tags.outputs.BACKEND_SHA_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      run: |
        echo "Frontend image pushed successfully: ${{ steps.tags.outputs.FRONTEND_TAG }}"
        echo "Backend image pushed successfully: ${{ steps.tags.outputs.BACKEND_TAG }}"
        
  vulnerability-scan:
    runs-on: ubuntu-latest
    needs: docker-build-push
    name: Security Scan
    
    steps:
    - name: Run Trivy vulnerability scanner for Frontend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_IMAGE }}:latest
        format: 'table'
        severity: 'CRITICAL,HIGH'
    
    - name: Run Trivy vulnerability scanner for Backend  
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BACKEND_IMAGE }}:latest
        format: 'table'
        severity: 'CRITICAL,HIGH'